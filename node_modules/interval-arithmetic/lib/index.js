"use strict";
/*
 * interval-arithmetic
 *
 * Copyright (c) 2015-2020 Mauricio Poppe
 * Licensed under the MIT license.
 */
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var interval_1 = require("./interval");
exports.Interval = interval_1.Interval;
var round_1 = __importDefault(require("./round"));
var constants_1 = __importDefault(require("./constants"));
var relational = __importStar(require("./operations/relational"));
var arithmetic = __importStar(require("./operations/arithmetic"));
var algebra = __importStar(require("./operations/algebra"));
var trigonometric = __importStar(require("./operations/trigonometric"));
var misc = __importStar(require("./operations/misc"));
var utils = __importStar(require("./operations/utils"));
// Object assign only supports 4 union levels
var out1 = Object.assign(constants_1.default, round_1.default, misc, utils);
var out2 = Object.assign(relational, arithmetic, algebra, trigonometric);
var out = Object.assign(interval_1.Interval, out1, out2, { round: round_1.default });
exports.default = out;
__export(require("./operations/relational"));
__export(require("./operations/arithmetic"));
__export(require("./operations/algebra"));
__export(require("./operations/trigonometric"));
__export(require("./operations/misc"));
__export(require("./operations/utils"));
__export(require("./round"));
//# sourceMappingURL=index.js.map